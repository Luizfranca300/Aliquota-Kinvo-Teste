// <auto-generated />
using System;
using Aliquota.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aliquota.Infra.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220511160530_V2")]
    partial class V2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Aliquota.Dominio.Entidades.Aplicacao", b =>
                {
                    b.Property<int>("AplicacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("aplicacao_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AplicadoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("aplicado_em");

                    b.Property<int>("ProdutoFinanceiroId")
                        .HasColumnType("int")
                        .HasColumnName("produto_financeiro_id");

                    b.Property<double>("ValorAplicado")
                        .HasColumnType("float")
                        .HasColumnName("valor_aplicado");

                    b.HasKey("AplicacaoId");

                    b.HasIndex("ProdutoFinanceiroId");

                    b.ToTable("aplicacoes");
                });

            modelBuilder.Entity("Aliquota.Dominio.Entidades.Carteira", b =>
                {
                    b.Property<int>("CarteiraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("carteira_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("cliente_id");

                    b.Property<double?>("SaldoConta")
                        .HasColumnType("float")
                        .HasColumnName("saldo_conta");

                    b.Property<double?>("SaldoInvestido")
                        .HasColumnType("float")
                        .HasColumnName("saldo_investido");

                    b.HasKey("CarteiraId");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("carteira");
                });

            modelBuilder.Entity("Aliquota.Dominio.Entidades.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cliente_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cpf");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_nascimento");

                    b.Property<DateTime?>("ExcluidoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("excluido_em");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.HasKey("ClienteId");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("Aliquota.Dominio.Entidades.ProdutoFinanceiro", b =>
                {
                    b.Property<int>("ProdutoFinanceiroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("produtofinanceiro_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("cliente_id");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.Property<double>("PorcentagemRentabilidade")
                        .HasColumnType("float")
                        .HasColumnName("porcentagem_rentabilidade");

                    b.HasKey("ProdutoFinanceiroId");

                    b.HasIndex("ClienteId");

                    b.ToTable("produtofinaceiros");
                });

            modelBuilder.Entity("Aliquota.Dominio.Entidades.Resgate", b =>
                {
                    b.Property<int>("ResgateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("resgate_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AplicacaoId")
                        .HasColumnType("int");

                    b.Property<double?>("IR")
                        .IsRequired()
                        .HasColumnType("float")
                        .HasColumnName("ir");

                    b.Property<double?>("Lucro")
                        .IsRequired()
                        .HasColumnType("float")
                        .HasColumnName("lucro");

                    b.Property<int>("ProdutoFinanceiroId")
                        .HasColumnType("int")
                        .HasColumnName("produto_financeiro_id");

                    b.Property<DateTime>("ResgatadoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("resgatado_em");

                    b.Property<double>("ValorResgatado")
                        .HasColumnType("float")
                        .HasColumnName("valor_resgatado");

                    b.HasKey("ResgateId");

                    b.HasIndex("ProdutoFinanceiroId");

                    b.ToTable("resgates");
                });

            modelBuilder.Entity("Aliquota.Dominio.Entidades.Aplicacao", b =>
                {
                    b.HasOne("Aliquota.Dominio.Entidades.ProdutoFinanceiro", "ProdutoFinanceiro")
                        .WithMany("Aplicacao")
                        .HasForeignKey("ProdutoFinanceiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProdutoFinanceiro");
                });

            modelBuilder.Entity("Aliquota.Dominio.Entidades.Carteira", b =>
                {
                    b.HasOne("Aliquota.Dominio.Entidades.Cliente", "Cliente")
                        .WithOne("Carteira")
                        .HasForeignKey("Aliquota.Dominio.Entidades.Carteira", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Aliquota.Dominio.Entidades.ProdutoFinanceiro", b =>
                {
                    b.HasOne("Aliquota.Dominio.Entidades.Cliente", "Cliente")
                        .WithMany("ProdutoFinanceiro")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Aliquota.Dominio.Entidades.Resgate", b =>
                {
                    b.HasOne("Aliquota.Dominio.Entidades.ProdutoFinanceiro", "ProdutoFinanceiro")
                        .WithMany("Resgate")
                        .HasForeignKey("ProdutoFinanceiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProdutoFinanceiro");
                });

            modelBuilder.Entity("Aliquota.Dominio.Entidades.Cliente", b =>
                {
                    b.Navigation("Carteira");

                    b.Navigation("ProdutoFinanceiro");
                });

            modelBuilder.Entity("Aliquota.Dominio.Entidades.ProdutoFinanceiro", b =>
                {
                    b.Navigation("Aplicacao");

                    b.Navigation("Resgate");
                });
#pragma warning restore 612, 618
        }
    }
}
